'forge clean' running (wd: /Users/pbharrin/Documents/GitHub/rareskills)
'forge build --build-info --force' running
Compiling 63 files with 0.8.18
Solc 0.8.18 finished in 3.87s
Compiler run successful

INFO:Detectors:[91m
TokenWithSanctionsTest.testTransferFrom() (test/Project1Tokens/TokenWithSanctions.t.sol#60-81) uses arbitrary from in transferFrom: transfered = token.transferFrom(vm.addr(2),vm.addr(1),100) (test/Project1Tokens/TokenWithSanctions.t.sol#70)
TokenWithSanctionsTest.testTransferFrom() (test/Project1Tokens/TokenWithSanctions.t.sol#60-81) uses arbitrary from in transferFrom: token.transferFrom(vm.addr(2),vm.addr(1),100) (test/Project1Tokens/TokenWithSanctions.t.sol#79)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#arbitrary-from-in-transferfrom[0m
INFO:Detectors:[91m
TokenWithGodModeTest.testTransfer() (test/Project1Tokens/TokenWithGodMode.t.sol#21-29) ignores return value by token.transfer(ADD_2,100) (test/Project1Tokens/TokenWithGodMode.t.sol#23)
TokenWithGodModeTest.testAdminOnly() (test/Project1Tokens/TokenWithGodMode.t.sol#34-41) ignores return value by token.transfer(ADD_2,100) (test/Project1Tokens/TokenWithGodMode.t.sol#35)
TokenWithSanctionsTest.testTransfer() (test/Project1Tokens/TokenWithSanctions.t.sol#45-55) ignores return value by token.transfer(ADD_2,100) (test/Project1Tokens/TokenWithSanctions.t.sol#47)
TokenWithSanctionsTest.testTransfer() (test/Project1Tokens/TokenWithSanctions.t.sol#45-55) ignores return value by token.transfer(ADD_1,100) (test/Project1Tokens/TokenWithSanctions.t.sol#53)
TokenWithSanctionsTest.testTransferFrom() (test/Project1Tokens/TokenWithSanctions.t.sol#60-81) ignores return value by token.transfer(vm.addr(2),200) (test/Project1Tokens/TokenWithSanctions.t.sol#61)
TokenWithSanctionsTest.testTransferFrom() (test/Project1Tokens/TokenWithSanctions.t.sol#60-81) ignores return value by token.transferFrom(vm.addr(2),vm.addr(1),100) (test/Project1Tokens/TokenWithSanctions.t.sol#79)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer[0m
INFO:Detectors:[93m
Vault.collectRewards(uint256) (src/Project2NFTs/part2/Vault.sol#77-90) uses a dangerous strict equality:
	- require(bool,string)(_owner == msg.sender,You must own an NFT to collect rewards on it.) (src/Project2NFTs/part2/Vault.sol#79)
Vault.stake(uint256) (src/Project2NFTs/part2/Vault.sol#40-56) uses a dangerous strict equality:
	- require(bool,string)(vault[tokenID].nftId == 0,this token is already staked) (src/Project2NFTs/part2/Vault.sol#42)
Vault.unStake(uint256) (src/Project2NFTs/part2/Vault.sol#62-69) uses a dangerous strict equality:
	- require(bool,string)(msg.sender == currentlyStaked.owner,You are not the owner of this NFT) (src/Project2NFTs/part2/Vault.sol#64)
TokenBuySellBondingTest.testBondingBuy() (test/Project1Tokens/TokenBuySellBonding.t.sol#31-47) uses a dangerous strict equality:
	- assert(bool)(buyQuoteBefore == token.balanceOf(defaultAdd)) (test/Project1Tokens/TokenBuySellBonding.t.sol#42)
TokenBuySellBondingTest.testBondingSell() (test/Project1Tokens/TokenBuySellBonding.t.sol#52-89) uses a dangerous strict equality:
	- assert(bool)(contractETHBalance == amountWei2Send) (test/Project1Tokens/TokenBuySellBonding.t.sol#65)
TokenBuySellBondingTest.testBondingSell() (test/Project1Tokens/TokenBuySellBonding.t.sol#52-89) uses a dangerous strict equality:
	- assert(bool)(saleAmount == saleQuote) (test/Project1Tokens/TokenBuySellBonding.t.sol#78)
TokenBuySellBondingTest.testBondingSell() (test/Project1Tokens/TokenBuySellBonding.t.sol#52-89) uses a dangerous strict equality:
	- assert(bool)(someRandomUser.balance == userETHBalanceBeforeSell + saleAmount) (test/Project1Tokens/TokenBuySellBonding.t.sol#81)
TokenWithGodModeTest.testTransfer() (test/Project1Tokens/TokenWithGodMode.t.sol#21-29) uses a dangerous strict equality:
	- assert(bool)(token.balanceOf(ADD_2) == 0) (test/Project1Tokens/TokenWithGodMode.t.sol#27)
TokenWithGodModeTest.testTransfer() (test/Project1Tokens/TokenWithGodMode.t.sol#21-29) uses a dangerous strict equality:
	- assert(bool)(token.balanceOf(ADD_1) == 100) (test/Project1Tokens/TokenWithGodMode.t.sol#28)
NFTEnumerableTest.testAll20Primes() (test/Project2NFTs/EnumerableNFT.t.sol#34-39) uses a dangerous strict equality:
	- assert(bool)(num2add == collection.balanceOf(DEFAULT_ADD)) (test/Project2NFTs/EnumerableNFT.t.sol#37)
NFTEnumerableTest.testFirst3Primes() (test/Project2NFTs/EnumerableNFT.t.sol#24-31) uses a dangerous strict equality:
	- assert(bool)(num2add == collection.balanceOf(DEFAULT_ADD)) (test/Project2NFTs/EnumerableNFT.t.sol#27)
NFTEnumerableTest.testMultipleOwners() (test/Project2NFTs/EnumerableNFT.t.sol#42-54) uses a dangerous strict equality:
	- assert(bool)(num2add == collection.balanceOf(DEFAULT_ADD)) (test/Project2NFTs/EnumerableNFT.t.sol#45)
NFTEnumerableTest.testMultipleOwners() (test/Project2NFTs/EnumerableNFT.t.sol#42-54) uses a dangerous strict equality:
	- assert(bool)(num2add == collection.balanceOf(add2)) (test/Project2NFTs/EnumerableNFT.t.sol#51)
NFTStakingRewardsTest.testStake() (test/Project2NFTs/NFTStakingRewards.t.sol#31-57) uses a dangerous strict equality:
	- assert(bool)(balAfter - balBefore == rewardsEarned) (test/Project2NFTs/NFTStakingRewards.t.sol#56)
OZNFTMerkleTest.testPresale() (test/Project2NFTs/OZNFTMerkle.t.sol#48-68) uses a dangerous strict equality:
	- assert(bool)(merkleNFT.balanceOf(add1) == 1) (test/Project2NFTs/OZNFTMerkle.t.sol#59)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Contract locking ether found:
	Contract SimpleNFT (src/Project2NFTs/tutorial/simple-nft.sol#6-73) has payable functions:
	 - SimpleNFT.transferFrom(address,address,uint256) (src/Project2NFTs/tutorial/simple-nft.sol#32-45)
	But does not have a function to withdraw the ether
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[93m
TokenBuySellBondingTest.testSaleOnZeroTotalSupply() (test/Project1Tokens/TokenBuySellBonding.t.sol#20-26) ignores return value by token.quoteSell(100) (test/Project1Tokens/TokenBuySellBonding.t.sol#25)
TokenWithGodModeTest.testTransfer() (test/Project1Tokens/TokenWithGodMode.t.sol#21-29) ignores return value by token.adminTransfer(ADD_2,ADD_1,100) (test/Project1Tokens/TokenWithGodMode.t.sol#26)
TokenWithGodModeTest.testAdminOnly() (test/Project1Tokens/TokenWithGodMode.t.sol#34-41) ignores return value by token.adminTransfer(ADD_2,ADD_1,100) (test/Project1Tokens/TokenWithGodMode.t.sol#39)
TokenWithSanctionsTest.testBanned() (test/Project1Tokens/TokenWithSanctions.t.sol#25-34) ignores return value by token.banAddress(ADD_1) (test/Project1Tokens/TokenWithSanctions.t.sol#27)
TokenWithSanctionsTest.testBanned() (test/Project1Tokens/TokenWithSanctions.t.sol#25-34) ignores return value by token.unBanAddress(ADD_1) (test/Project1Tokens/TokenWithSanctions.t.sol#32)
TokenWithSanctionsTest.testBanWrongOwner() (test/Project1Tokens/TokenWithSanctions.t.sol#36-42) ignores return value by token.banAddress(ADD_1) (test/Project1Tokens/TokenWithSanctions.t.sol#40)
TokenWithSanctionsTest.testTransfer() (test/Project1Tokens/TokenWithSanctions.t.sol#45-55) ignores return value by token.banAddress(ADD_1) (test/Project1Tokens/TokenWithSanctions.t.sol#50)
TokenWithSanctionsTest.testTransferFrom() (test/Project1Tokens/TokenWithSanctions.t.sol#60-81) ignores return value by token.approve(vm.addr(1),200) (test/Project1Tokens/TokenWithSanctions.t.sol#64)
TokenWithSanctionsTest.testTransferFrom() (test/Project1Tokens/TokenWithSanctions.t.sol#60-81) ignores return value by token.banAddress(vm.addr(2)) (test/Project1Tokens/TokenWithSanctions.t.sol#75)
OZNFTBitmapTest.testPresale() (test/Project2NFTs/OZNFTBitmap.t.sol#75-88) ignores return value by bitmapNFT.presale{value: 1000000000000000000}(0,signature,false) (test/Project2NFTs/OZNFTBitmap.t.sol#82)
OZNFTBitmapTest.testPresale() (test/Project2NFTs/OZNFTBitmap.t.sol#75-88) ignores return value by bitmapNFT.presale{value: 1000000000000000000}(1,signature,false) (test/Project2NFTs/OZNFTBitmap.t.sol#86)
OZNFTBitmapTest.testPresaleBM() (test/Project2NFTs/OZNFTBitmap.t.sol#93-106) ignores return value by bitmapNFT.presale{value: 1000000000000000000}(0,signature,true) (test/Project2NFTs/OZNFTBitmap.t.sol#100)
OZNFTBitmapTest.testPresaleBM() (test/Project2NFTs/OZNFTBitmap.t.sol#93-106) ignores return value by bitmapNFT.presale{value: 1000000000000000000}(1,signature,true) (test/Project2NFTs/OZNFTBitmap.t.sol#104)
OZNFTMerkleTest.testPresale() (test/Project2NFTs/OZNFTMerkle.t.sol#48-68) ignores return value by merkleNFT.presale{value: 1000000000000000000}(proof1) (test/Project2NFTs/OZNFTMerkle.t.sol#54)
OZNFTMerkleTest.testPresale() (test/Project2NFTs/OZNFTMerkle.t.sol#48-68) ignores return value by merkleNFT.presale{value: 1000000000000000000}(proof1) (test/Project2NFTs/OZNFTMerkle.t.sol#66)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return[0m
INFO:Detectors:[92m
TokenWithGodMode.constructor(string,string,uint256)._name (src/Project1Tokens/TokenWithGodMode.sol#9) shadows:
	- ERC20._name (lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol#42) (state variable)
TokenWithGodMode.constructor(string,string,uint256)._symbol (src/Project1Tokens/TokenWithGodMode.sol#9) shadows:
	- ERC20._symbol (lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol#43) (state variable)
TokenWithSanctions.constructor(string,string,uint256)._name (src/Project1Tokens/TokenWithSanctions.sol#10) shadows:
	- ERC20._name (lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol#42) (state variable)
TokenWithSanctions.constructor(string,string,uint256)._symbol (src/Project1Tokens/TokenWithSanctions.sol#10) shadows:
	- ERC20._symbol (lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol#43) (state variable)
RewardToken.constructor(string,string)._name (src/Project2NFTs/part2/Token.sol#12) shadows:
	- ERC20._name (lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol#42) (state variable)
RewardToken.constructor(string,string)._symbol (src/Project2NFTs/part2/Token.sol#12) shadows:
	- ERC20._symbol (lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol#43) (state variable)
Vault.collectRewards(uint256)._owner (src/Project2NFTs/part2/Vault.sol#78) shadows:
	- Ownable._owner (lib/openzeppelin-contracts/contracts/access/Ownable.sol#21) (state variable)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
PrimeChecker.numberOfPrimes(address) (src/Project2NFTs/part3/PrimeChecker.sol#31-45) has external calls inside a loop: _isPrime(_collection.tokenOfOwnerByIndex(nftOwner,i)) (src/Project2NFTs/part3/PrimeChecker.sol#39)
OZNFTMerkleTest.testRegularPurchase() (test/Project2NFTs/OZNFTMerkle.t.sol#73-95) has external calls inside a loop: merkleNFT.mint{value: 2000000000000000000}() (test/Project2NFTs/OZNFTMerkle.t.sol#86)
OZNFTMerkleTest.testRegularPurchase() (test/Project2NFTs/OZNFTMerkle.t.sol#73-95) has external calls inside a loop: merkleNFT.tokenSupply() < merkleNFT.MAX_SUPPLY() (test/Project2NFTs/OZNFTMerkle.t.sol#87)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in Vault.stake(uint256) (src/Project2NFTs/part2/Vault.sol#40-56):
	External calls:
	- _collection.safeTransferFrom(msg.sender,address(this),tokenID) (src/Project2NFTs/part2/Vault.sol#54)
	State variables written after the call(s):
	- delete ownerAdd (src/Project2NFTs/part2/Vault.sol#55)
Reentrancy in TokenBuySellBondingTest.testBondingSell() (test/Project1Tokens/TokenBuySellBonding.t.sol#52-89):
	External calls:
	- vm.deal(someRandomUser,userStartingBalanceETH) (test/Project1Tokens/TokenBuySellBonding.t.sol#55)
	- vm.startPrank(someRandomUser) (test/Project1Tokens/TokenBuySellBonding.t.sol#56)
	- (sent) = address(token).call{value: amountWei2Send}() (test/Project1Tokens/TokenBuySellBonding.t.sol#59)
	- saleAmount = token.sell(allOurTokens) (test/Project1Tokens/TokenBuySellBonding.t.sol#77)
	- assertApproxEqRel(userStartingBalanceETH,someRandomUser.balance,delta) (test/Project1Tokens/TokenBuySellBonding.t.sol#86)
		- (status) = HEVM_ADDRESS.call(abi.encodePacked(bytes4(keccak256(bytes)(store(address,bytes32,bytes32))),abi.encode(HEVM_ADDRESS,bytes32(failed),bytes32(uint256(0x01))))) (lib/forge-std/lib/ds-test/src/test.sol#67-72)
	External calls sending eth:
	- (sent) = address(token).call{value: amountWei2Send}() (test/Project1Tokens/TokenBuySellBonding.t.sol#59)
	State variables written after the call(s):
	- assertApproxEqRel(userStartingBalanceETH,someRandomUser.balance,delta) (test/Project1Tokens/TokenBuySellBonding.t.sol#86)
		- _failed = true (lib/forge-std/lib/ds-test/src/test.sol#75)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Reentrancy in TokenBuySellBondingTest.testBondingSell() (test/Project1Tokens/TokenBuySellBonding.t.sol#52-89):
	External calls:
	- vm.deal(someRandomUser,userStartingBalanceETH) (test/Project1Tokens/TokenBuySellBonding.t.sol#55)
	- vm.startPrank(someRandomUser) (test/Project1Tokens/TokenBuySellBonding.t.sol#56)
	- (sent) = address(token).call{value: amountWei2Send}() (test/Project1Tokens/TokenBuySellBonding.t.sol#59)
	- saleAmount = token.sell(allOurTokens) (test/Project1Tokens/TokenBuySellBonding.t.sol#77)
	- assertApproxEqRel(userStartingBalanceETH,someRandomUser.balance,delta) (test/Project1Tokens/TokenBuySellBonding.t.sol#86)
		- (status) = HEVM_ADDRESS.call(abi.encodePacked(bytes4(keccak256(bytes)(store(address,bytes32,bytes32))),abi.encode(HEVM_ADDRESS,bytes32(failed),bytes32(uint256(0x01))))) (lib/forge-std/lib/ds-test/src/test.sol#67-72)
	External calls sending eth:
	- (sent) = address(token).call{value: amountWei2Send}() (test/Project1Tokens/TokenBuySellBonding.t.sol#59)
	Event emitted after the call(s):
	- log(Error: a == b not satisfied [uint]) (lib/forge-std/lib/ds-test/src/test.sol#159)
		- assertApproxEqRel(userStartingBalanceETH,someRandomUser.balance,delta) (test/Project1Tokens/TokenBuySellBonding.t.sol#86)
	- log(Error: a ~= b not satisfied [uint]) (lib/forge-std/src/StdAssertions.sol#209)
		- assertApproxEqRel(userStartingBalanceETH,someRandomUser.balance,delta) (test/Project1Tokens/TokenBuySellBonding.t.sol#86)
	- log_named_decimal_uint( Max % Delta,maxPercentDelta,18) (lib/forge-std/src/StdAssertions.sol#212)
		- assertApproxEqRel(userStartingBalanceETH,someRandomUser.balance,delta) (test/Project1Tokens/TokenBuySellBonding.t.sol#86)
	- log_named_decimal_uint(     % Delta,percentDelta,18) (lib/forge-std/src/StdAssertions.sol#213)
		- assertApproxEqRel(userStartingBalanceETH,someRandomUser.balance,delta) (test/Project1Tokens/TokenBuySellBonding.t.sol#86)
	- log_named_uint(      Left,a) (lib/forge-std/lib/ds-test/src/test.sol#160)
		- assertApproxEqRel(userStartingBalanceETH,someRandomUser.balance,delta) (test/Project1Tokens/TokenBuySellBonding.t.sol#86)
	- log_named_uint(     Right,b) (lib/forge-std/lib/ds-test/src/test.sol#161)
		- assertApproxEqRel(userStartingBalanceETH,someRandomUser.balance,delta) (test/Project1Tokens/TokenBuySellBonding.t.sol#86)
	- log_named_uint(        Left,a) (lib/forge-std/src/StdAssertions.sol#210)
		- assertApproxEqRel(userStartingBalanceETH,someRandomUser.balance,delta) (test/Project1Tokens/TokenBuySellBonding.t.sol#86)
	- log_named_uint(       Right,b) (lib/forge-std/src/StdAssertions.sol#211)
		- assertApproxEqRel(userStartingBalanceETH,someRandomUser.balance,delta) (test/Project1Tokens/TokenBuySellBonding.t.sol#86)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m
INFO:Detectors:[92m
Different versions of Solidity are used:
	- Version used: ['0.8.18', '>=0.4.22<0.9.0', '>=0.5.0', '>=0.6.0<0.9.0', '>=0.6.2<0.9.0', '^0.8.0', '^0.8.1', '^0.8.4']
	- 0.8.18 (src/Project1Tokens/TokenBuySellBonding.sol#2)
	- 0.8.18 (src/Project1Tokens/TokenWithGodMode.sol#2)
	- 0.8.18 (src/Project1Tokens/TokenWithSanctions.sol#2)
	- 0.8.18 (src/Project2NFTs/part1/OZNFTBitmap.sol#2)
	- 0.8.18 (src/Project2NFTs/part1/OZNFTMerkle.sol#2)
	- 0.8.18 (src/Project2NFTs/part2/NFT.sol#2)
	- 0.8.18 (src/Project2NFTs/part2/Token.sol#2)
	- 0.8.18 (src/Project2NFTs/part2/Vault.sol#2)
	- 0.8.18 (src/Project2NFTs/part3/NFTEnumerable.sol#2)
	- 0.8.18 (src/Project2NFTs/part3/PrimeChecker.sol#2)
	- 0.8.18 (src/Project2NFTs/tutorial/OpenZeppelinNFT.sol#2)
	- 0.8.18 (src/Project2NFTs/tutorial/simple-nft.sol#2)
	- 0.8.18 (test/Project1Tokens/TokenBuySellBonding.t.sol#2)
	- 0.8.18 (test/Project1Tokens/TokenWithGodMode.t.sol#2)
	- 0.8.18 (test/Project1Tokens/TokenWithSanctions.t.sol#2)
	- 0.8.18 (test/Project2NFTs/EnumerableNFT.t.sol#2)
	- 0.8.18 (test/Project2NFTs/NFTStakingRewards.t.sol#2)
	- 0.8.18 (test/Project2NFTs/OZNFTBitmap.t.sol#2)
	- 0.8.18 (test/Project2NFTs/OZNFTMerkle.t.sol#2)
	- >=0.4.22<0.9.0 (lib/forge-std/src/StdStyle.sol#2)
	- >=0.4.22<0.9.0 (lib/forge-std/src/console.sol#2)
	- >=0.4.22<0.9.0 (lib/forge-std/src/console2.sol#2)
	- >=0.5.0 (lib/forge-std/lib/ds-test/src/test.sol#16)
	- >=0.6.0<0.9.0 (lib/forge-std/src/StdJson.sol#2)
	- >=0.6.2<0.9.0 (lib/forge-std/src/Base.sol#2)
	- >=0.6.2<0.9.0 (lib/forge-std/src/StdAssertions.sol#2)
	- >=0.6.2<0.9.0 (lib/forge-std/src/StdChains.sol#2)
	- >=0.6.2<0.9.0 (lib/forge-std/src/StdCheats.sol#2)
	- >=0.6.2<0.9.0 (lib/forge-std/src/StdError.sol#3)
	- >=0.6.2<0.9.0 (lib/forge-std/src/StdInvariant.sol#2)
	- >=0.6.2<0.9.0 (lib/forge-std/src/StdMath.sol#2)
	- >=0.6.2<0.9.0 (lib/forge-std/src/StdStorage.sol#2)
	- >=0.6.2<0.9.0 (lib/forge-std/src/StdUtils.sol#2)
	- >=0.6.2<0.9.0 (lib/forge-std/src/Test.sol#2)
	- >=0.6.2<0.9.0 (lib/forge-std/src/Vm.sol#2)
	- >=0.6.2<0.9.0 (lib/forge-std/src/interfaces/IMulticall3.sol#2)
	- ABIEncoderV2 (lib/forge-std/src/StdChains.sol#4)
	- ABIEncoderV2 (lib/forge-std/src/StdCheats.sol#4)
	- ABIEncoderV2 (lib/forge-std/src/StdInvariant.sol#4)
	- ABIEncoderV2 (lib/forge-std/src/StdJson.sol#4)
	- ABIEncoderV2 (lib/forge-std/src/StdUtils.sol#4)
	- ABIEncoderV2 (lib/forge-std/src/Test.sol#4)
	- ABIEncoderV2 (lib/forge-std/src/Vm.sol#4)
	- ABIEncoderV2 (lib/forge-std/src/interfaces/IMulticall3.sol#4)
	- ^0.8.0 (lib/erc1363-payable-token/contracts/token/ERC1363/ERC1363.sol#3)
	- ^0.8.0 (lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363.sol#3)
	- ^0.8.0 (lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363Receiver.sol#3)
	- ^0.8.0 (lib/erc1363-payable-token/contracts/token/ERC1363/IERC1363Spender.sol#3)
	- ^0.8.0 (lib/openzeppelin-contracts/contracts/access/Ownable.sol#4)
	- ^0.8.0 (lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol#4)
	- ^0.8.0 (lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol#4)
	- ^0.8.0 (lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol#4)
	- ^0.8.0 (lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol#4)
	- ^0.8.0 (lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol#4)
	- ^0.8.0 (lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol#4)
	- ^0.8.0 (lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol#4)
	- ^0.8.0 (lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol#4)
	- ^0.8.0 (lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol#4)
	- ^0.8.0 (lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol#4)
	- ^0.8.0 (lib/openzeppelin-contracts/contracts/token/common/ERC2981.sol#4)
	- ^0.8.0 (lib/openzeppelin-contracts/contracts/utils/Context.sol#4)
	- ^0.8.0 (lib/openzeppelin-contracts/contracts/utils/Strings.sol#4)
	- ^0.8.0 (lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol#4)
	- ^0.8.0 (lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol#4)
	- ^0.8.0 (lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol#4)
	- ^0.8.0 (lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol#4)
	- ^0.8.0 (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#4)
	- ^0.8.0 (lib/openzeppelin-contracts/contracts/utils/structs/BitMaps.sol#3)
	- ^0.8.1 (lib/openzeppelin-contracts/contracts/utils/Address.sol#4)
	- ^0.8.4 (lib/murky/src/Merkle.sol#2)
	- ^0.8.4 (lib/murky/src/common/MurkyBase.sol#2)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used[0m
INFO:Detectors:[92m
NFTEnumerable.massFreeMint(uint256) (src/Project2NFTs/part3/NFTEnumerable.sol#39-44) has costly operations inside a loop:
	- tokenSupply ++ (src/Project2NFTs/part3/NFTEnumerable.sol#42)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#costly-operations-inside-a-loop[0m
INFO:Detectors:[92m
Low level call in TokenBuySellBonding.sell(uint256) (src/Project1Tokens/TokenBuySellBonding.sol#68-79):
	- (sent) = address(msg.sender).call{value: amountEth}(abi.encode(1)) (src/Project1Tokens/TokenBuySellBonding.sol#75)
Low level call in TokenBuySellBondingTest.testBondingBuy() (test/Project1Tokens/TokenBuySellBonding.t.sol#31-47):
	- (sent) = address(token).call{value: 100}() (test/Project1Tokens/TokenBuySellBonding.t.sol#35)
Low level call in TokenBuySellBondingTest.testBondingSell() (test/Project1Tokens/TokenBuySellBonding.t.sol#52-89):
	- (sent) = address(token).call{value: amountWei2Send}() (test/Project1Tokens/TokenBuySellBonding.t.sol#59)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Parameter OZNFTBitmap.setAllowList2SigningAddress(address)._signingAddress (src/Project2NFTs/part1/OZNFTBitmap.sol#43) is not in mixedCase
Parameter OZNFTBitmap.verifySig(uint256,bytes)._signature (src/Project2NFTs/part1/OZNFTBitmap.sol#51) is not in mixedCase
Parameter OZNFTMerkle.setMerkleRoot(bytes32)._merkleRoot (src/Project2NFTs/part1/OZNFTMerkle.sol#27) is not in mixedCase
Parameter OZNFTMerkle.presale(bytes32[])._proof (src/Project2NFTs/part1/OZNFTMerkle.sol#51) is not in mixedCase
Variable Vault._collection (src/Project2NFTs/part2/Vault.sol#21) is not in mixedCase
Variable Vault._rewardToken (src/Project2NFTs/part2/Vault.sol#22) is not in mixedCase
Variable PrimeChecker._collection (src/Project2NFTs/part3/PrimeChecker.sol#7) is not in mixedCase
Parameter SimpleNFT.mint(uint256)._tokenId (src/Project2NFTs/tutorial/simple-nft.sol#19) is not in mixedCase
Parameter SimpleNFT.ownerOf(uint256)._tokenId (src/Project2NFTs/tutorial/simple-nft.sol#27) is not in mixedCase
Parameter SimpleNFT.transferFrom(address,address,uint256)._from (src/Project2NFTs/tutorial/simple-nft.sol#32) is not in mixedCase
Parameter SimpleNFT.transferFrom(address,address,uint256)._to (src/Project2NFTs/tutorial/simple-nft.sol#32) is not in mixedCase
Parameter SimpleNFT.transferFrom(address,address,uint256)._tokenId (src/Project2NFTs/tutorial/simple-nft.sol#32) is not in mixedCase
Parameter SimpleNFT.tokenURI(uint256)._tokenId (src/Project2NFTs/tutorial/simple-nft.sol#47) is not in mixedCase
Parameter SimpleNFT.setApprovalForAll(address,bool)._operator (src/Project2NFTs/tutorial/simple-nft.sol#57) is not in mixedCase
Parameter SimpleNFT.setApprovalForAll(address,bool)._approved (src/Project2NFTs/tutorial/simple-nft.sol#57) is not in mixedCase
Parameter SimpleNFT.isApprovedForAll(address,address)._owner (src/Project2NFTs/tutorial/simple-nft.sol#65) is not in mixedCase
Parameter SimpleNFT.isApprovedForAll(address,address)._operator (src/Project2NFTs/tutorial/simple-nft.sol#65) is not in mixedCase
Parameter SimpleNFT.balanceOf(address)._owner (src/Project2NFTs/tutorial/simple-nft.sol#69) is not in mixedCase
Constant SimpleNFT.baseURL (src/Project2NFTs/tutorial/simple-nft.sol#17) is not in UPPER_CASE_WITH_UNDERSCORES
Parameter OZNFTBitmapTest.bytes65ToString(bytes)._bytes (test/Project2NFTs/OZNFTBitmap.t.sol#42) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
CommonBase.CONSOLE (lib/forge-std/src/Base.sol#11) is never used in TokenBuySellBondingTest (test/Project1Tokens/TokenBuySellBonding.t.sol#7-90)
CommonBase.DEFAULT_SENDER (lib/forge-std/src/Base.sol#13) is never used in TokenBuySellBondingTest (test/Project1Tokens/TokenBuySellBonding.t.sol#7-90)
CommonBase.DEFAULT_TEST_CONTRACT (lib/forge-std/src/Base.sol#15) is never used in TokenBuySellBondingTest (test/Project1Tokens/TokenBuySellBonding.t.sol#7-90)
CommonBase.MULTICALL3_ADDRESS (lib/forge-std/src/Base.sol#17) is never used in TokenBuySellBondingTest (test/Project1Tokens/TokenBuySellBonding.t.sol#7-90)
CommonBase.UINT256_MAX (lib/forge-std/src/Base.sol#19-20) is never used in TokenBuySellBondingTest (test/Project1Tokens/TokenBuySellBonding.t.sol#7-90)
CommonBase.stdstore (lib/forge-std/src/Base.sol#23) is never used in TokenBuySellBondingTest (test/Project1Tokens/TokenBuySellBonding.t.sol#7-90)
CommonBase.CONSOLE (lib/forge-std/src/Base.sol#11) is never used in TokenWithGodModeTest (test/Project1Tokens/TokenWithGodMode.t.sol#8-42)
CommonBase.DEFAULT_SENDER (lib/forge-std/src/Base.sol#13) is never used in TokenWithGodModeTest (test/Project1Tokens/TokenWithGodMode.t.sol#8-42)
CommonBase.DEFAULT_TEST_CONTRACT (lib/forge-std/src/Base.sol#15) is never used in TokenWithGodModeTest (test/Project1Tokens/TokenWithGodMode.t.sol#8-42)
CommonBase.MULTICALL3_ADDRESS (lib/forge-std/src/Base.sol#17) is never used in TokenWithGodModeTest (test/Project1Tokens/TokenWithGodMode.t.sol#8-42)
CommonBase.UINT256_MAX (lib/forge-std/src/Base.sol#19-20) is never used in TokenWithGodModeTest (test/Project1Tokens/TokenWithGodMode.t.sol#8-42)
CommonBase.stdstore (lib/forge-std/src/Base.sol#23) is never used in TokenWithGodModeTest (test/Project1Tokens/TokenWithGodMode.t.sol#8-42)
CommonBase.CONSOLE (lib/forge-std/src/Base.sol#11) is never used in TokenWithSanctionsTest (test/Project1Tokens/TokenWithSanctions.t.sol#7-82)
CommonBase.DEFAULT_SENDER (lib/forge-std/src/Base.sol#13) is never used in TokenWithSanctionsTest (test/Project1Tokens/TokenWithSanctions.t.sol#7-82)
CommonBase.DEFAULT_TEST_CONTRACT (lib/forge-std/src/Base.sol#15) is never used in TokenWithSanctionsTest (test/Project1Tokens/TokenWithSanctions.t.sol#7-82)
CommonBase.MULTICALL3_ADDRESS (lib/forge-std/src/Base.sol#17) is never used in TokenWithSanctionsTest (test/Project1Tokens/TokenWithSanctions.t.sol#7-82)
CommonBase.UINT256_MAX (lib/forge-std/src/Base.sol#19-20) is never used in TokenWithSanctionsTest (test/Project1Tokens/TokenWithSanctions.t.sol#7-82)
CommonBase.stdstore (lib/forge-std/src/Base.sol#23) is never used in TokenWithSanctionsTest (test/Project1Tokens/TokenWithSanctions.t.sol#7-82)
CommonBase.CONSOLE (lib/forge-std/src/Base.sol#11) is never used in NFTEnumerableTest (test/Project2NFTs/EnumerableNFT.t.sol#8-55)
CommonBase.DEFAULT_SENDER (lib/forge-std/src/Base.sol#13) is never used in NFTEnumerableTest (test/Project2NFTs/EnumerableNFT.t.sol#8-55)
CommonBase.DEFAULT_TEST_CONTRACT (lib/forge-std/src/Base.sol#15) is never used in NFTEnumerableTest (test/Project2NFTs/EnumerableNFT.t.sol#8-55)
CommonBase.MULTICALL3_ADDRESS (lib/forge-std/src/Base.sol#17) is never used in NFTEnumerableTest (test/Project2NFTs/EnumerableNFT.t.sol#8-55)
CommonBase.UINT256_MAX (lib/forge-std/src/Base.sol#19-20) is never used in NFTEnumerableTest (test/Project2NFTs/EnumerableNFT.t.sol#8-55)
CommonBase.stdstore (lib/forge-std/src/Base.sol#23) is never used in NFTEnumerableTest (test/Project2NFTs/EnumerableNFT.t.sol#8-55)
CommonBase.CONSOLE (lib/forge-std/src/Base.sol#11) is never used in NFTStakingRewardsTest (test/Project2NFTs/NFTStakingRewards.t.sol#9-58)
CommonBase.DEFAULT_SENDER (lib/forge-std/src/Base.sol#13) is never used in NFTStakingRewardsTest (test/Project2NFTs/NFTStakingRewards.t.sol#9-58)
CommonBase.DEFAULT_TEST_CONTRACT (lib/forge-std/src/Base.sol#15) is never used in NFTStakingRewardsTest (test/Project2NFTs/NFTStakingRewards.t.sol#9-58)
CommonBase.MULTICALL3_ADDRESS (lib/forge-std/src/Base.sol#17) is never used in NFTStakingRewardsTest (test/Project2NFTs/NFTStakingRewards.t.sol#9-58)
CommonBase.UINT256_MAX (lib/forge-std/src/Base.sol#19-20) is never used in NFTStakingRewardsTest (test/Project2NFTs/NFTStakingRewards.t.sol#9-58)
CommonBase.stdstore (lib/forge-std/src/Base.sol#23) is never used in NFTStakingRewardsTest (test/Project2NFTs/NFTStakingRewards.t.sol#9-58)
CommonBase.CONSOLE (lib/forge-std/src/Base.sol#11) is never used in OZNFTBitmapTest (test/Project2NFTs/OZNFTBitmap.t.sol#8-107)
CommonBase.DEFAULT_SENDER (lib/forge-std/src/Base.sol#13) is never used in OZNFTBitmapTest (test/Project2NFTs/OZNFTBitmap.t.sol#8-107)
CommonBase.DEFAULT_TEST_CONTRACT (lib/forge-std/src/Base.sol#15) is never used in OZNFTBitmapTest (test/Project2NFTs/OZNFTBitmap.t.sol#8-107)
CommonBase.MULTICALL3_ADDRESS (lib/forge-std/src/Base.sol#17) is never used in OZNFTBitmapTest (test/Project2NFTs/OZNFTBitmap.t.sol#8-107)
CommonBase.UINT256_MAX (lib/forge-std/src/Base.sol#19-20) is never used in OZNFTBitmapTest (test/Project2NFTs/OZNFTBitmap.t.sol#8-107)
CommonBase.stdstore (lib/forge-std/src/Base.sol#23) is never used in OZNFTBitmapTest (test/Project2NFTs/OZNFTBitmap.t.sol#8-107)
CommonBase.CONSOLE (lib/forge-std/src/Base.sol#11) is never used in OZNFTMerkleTest (test/Project2NFTs/OZNFTMerkle.t.sol#8-96)
CommonBase.DEFAULT_SENDER (lib/forge-std/src/Base.sol#13) is never used in OZNFTMerkleTest (test/Project2NFTs/OZNFTMerkle.t.sol#8-96)
CommonBase.DEFAULT_TEST_CONTRACT (lib/forge-std/src/Base.sol#15) is never used in OZNFTMerkleTest (test/Project2NFTs/OZNFTMerkle.t.sol#8-96)
CommonBase.MULTICALL3_ADDRESS (lib/forge-std/src/Base.sol#17) is never used in OZNFTMerkleTest (test/Project2NFTs/OZNFTMerkle.t.sol#8-96)
CommonBase.UINT256_MAX (lib/forge-std/src/Base.sol#19-20) is never used in OZNFTMerkleTest (test/Project2NFTs/OZNFTMerkle.t.sol#8-96)
CommonBase.stdstore (lib/forge-std/src/Base.sol#23) is never used in OZNFTMerkleTest (test/Project2NFTs/OZNFTMerkle.t.sol#8-96)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable[0m
INFO:Detectors:[92m
OZNFTMerkleTest.add1 (test/Project2NFTs/OZNFTMerkle.t.sol#10) should be constant 
OZNFTMerkleTest.add2 (test/Project2NFTs/OZNFTMerkle.t.sol#11) should be constant 
OZNFTMerkleTest.add9 (test/Project2NFTs/OZNFTMerkle.t.sol#12) should be constant 
TokenBuySellBondingTest.defaultAdd (test/Project1Tokens/TokenBuySellBonding.t.sol#11) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
NFTEnumerable.owner (src/Project2NFTs/part3/NFTEnumerable.sol#12) should be immutable 
OZNFTMerkleTest.m (test/Project2NFTs/OZNFTMerkle.t.sol#15) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable[0m
INFO:Slither:. analyzed (68 contracts with 85 detectors), 125 result(s) found
